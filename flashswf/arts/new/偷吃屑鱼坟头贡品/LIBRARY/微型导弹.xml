<DOMSymbolItem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://ns.adobe.com/xfl/2008/" name="微型导弹" itemID="6655f8cd-000039ae" linkageExportForAS="true" linkageIdentifier="微型导弹" lastModified="1745465825">
  <timeline>
    <DOMTimeline name="微型导弹">
      <layers>
        <DOMLayer name="Labels Layer" color="#DF08CC">
          <frames>
            <DOMFrame index="0" duration="99" keyMode="9728">
              <elements/>
            </DOMFrame>
            <DOMFrame index="99" keyMode="9728">
              <elements/>
            </DOMFrame>
            <DOMFrame index="100" duration="9" name="消失" labelType="name" keyMode="9728">
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Script Layer" color="#E777E2">
          <frames>
            <DOMFrame index="0" duration="99" keyMode="9728">
              <elements/>
            </DOMFrame>
            <DOMFrame index="99" keyMode="9728">
              <Actionscript>
                <script><![CDATA[stop();
]]></script>
              </Actionscript>
              <elements/>
            </DOMFrame>
            <DOMFrame index="100" duration="9" keyMode="9728">
              <Actionscript>
                <script><![CDATA[声音 = "";
霰弹值 = 1;
子弹散射度 = 5;
发射效果 = "";
子弹种类 = "普通爆炸";
if(!子弹威力)
{
   子弹威力 = 800;
}
else
{
   子弹威力 *= 0.5;
}
子弹速度 = 0;
击中地图效果 = "";
Z轴攻击范围 = 30;
击倒率 = 1;
击中后子弹的效果 = "";
击退初速度 = 20;
shootX = this._x;
shootY = this._y;
if(_root.client != null && _root.me != null)
{
   _root.子弹区域shoot表演(声音,霰弹值,子弹散射度,发射效果,子弹种类,子弹威力,子弹速度,Z轴攻击范围,击中地图效果,发射者名,shootX,shootY,Z轴坐标,子弹敌我属性值,击倒率,击中后子弹的效果,击退初速度);
}
else
{
   _root.子弹区域shoot(声音,霰弹值,子弹散射度,发射效果,子弹种类,子弹威力,子弹速度,Z轴攻击范围,击中地图效果,发射者名,shootX,shootY,Z轴坐标,子弹敌我属性值,击倒率,击中后子弹的效果,击退初速度);
}
stop();
this.removeMovieClip();
]]></script>
              </Actionscript>
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer 3" color="#E879EC">
          <frames>
            <DOMFrame index="0" duration="100" keyMode="9728">
              <elements>
                <DOMSymbolInstance libraryItemName="Symbol 478" centerPoint3DY="-18">
                  <matrix>
                    <Matrix tx="-5" ty="-23"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="100" duration="9" keyMode="9728">
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer 4" color="#D0F71D" current="true" isSelected="true">
          <frames>
            <DOMFrame index="0" duration="100" keyMode="9728">
              <elements>
                <DOMSymbolInstance libraryItemName="Symbol 13" name="area" selected="true">
                  <matrix>
                    <Matrix d="0.999984741210938" tx="-12.5" ty="-12.5"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <Actionscript>
                    <script><![CDATA[onClipEvent(load){
   子弹名 = _parent._name;
   基准速度 = 30;
   加速度 = 0.5;
   速度 = _root.basic_random() * 3;
   旋转角度 = _parent._rotation + 15 - _root.basic_random() * 30;
   _parent._x += 30 - _root.basic_random() * 30;
   _parent._y += (- _root.basic_random()) * 30;
   上抛速度 = _root.basic_random() * -5 - 5;
   上抛阻力 = 0.4;
   修正角度 = 0;
   转向速度 = 38;
   飞行阻力 = 0.02;
   转向阻力 = 0.05;
   速度上限 = 5;
   转向动力 = 18;
   转向速度下限 = 5;
   锁定延迟 = -4;
   锁定范围 = 2000;
   是否为敌人 = !_root.gameworld.子弹区域[子弹名].子弹敌我属性值;
   攻击目标 = "无";
   瞄准许可 = false;
   初始_x = _parent._x + _parent._parent._x;
   初始_y = _parent._y + _parent._parent._y;
   导弹坐标 = {x:初始_x,y:初始_y};
   锁定坐标 = {x:初始_x,y:初始_y};
   敌人 = null;
   敌人_x = 0;
   敌人_y = 0;
   敌人_z = 0;
   敌人名 = "无";
   d_min = 锁定范围;
   d = infinity;
   敌人_敌我属性 = undefined;
   待检测元件 = this;
   循环记数 = 0;
   发射速度 = Math.sqrt(Math.pow(_root.gameworld.子弹区域[子弹名].xmov,2) + Math.pow(_root.gameworld.子弹区域[子弹名].ymov,2));
   _root.gameworld.子弹区域[子弹名].xmov = 0;
   _root.gameworld.子弹区域[子弹名].ymov = 0;
   发射者名 = _root.gameworld.子弹区域[子弹名].发射者名;
   Z轴坐标 = _root.gameworld.子弹区域[子弹名].Z轴坐标;
   this.转换导弹坐标 = function()
   {
      导弹坐标.x = _parent._x + _parent._parent._x;
      导弹坐标.y = _parent._y + _parent._parent._y;
   };
   this.寻找攻击目标 = function()
   {
      敌人_x = 0;
      敌人_y = 0;
      敌人名 = "无";
      d_min = 锁定范围;
      if(攻击目标 == "无")
      {
         for(each in _root.gameworld)
         {
            敌人_敌我属性 = _root.gameworld[each].是否为敌人;
            if(是否为敌人 != 敌人_敌我属性 and _root.gameworld[each].hp > 0)
            {
               敌人_x = _root.gameworld[each]._x;
               敌人_y = _root.gameworld[each]._y;
               敌人名 = _root.gameworld[each]._name;
               d = Math.abs(敌人_x - 导弹坐标.x) + 5 * Math.abs(敌人_y - 初始_y);
               if(d_min > d)
               {
                  d_min = d;
                  攻击目标 = 敌人名;
                  敌人_z = _root.gameworld[each].Z轴坐标;
                  锁定坐标.x = 敌人_x;
                  锁定坐标.y = 敌人_y - 30;
               }
            }
         }
         if(攻击目标 != "无")
         {
            瞄准许可 = true;
            加速度 += 1.25;
            速度上限 = 80;
            上抛速度 = _root.basic_random() * -5 - 5;
         }
      }
   };
   this.onEnterFrame = function()
   {
      if(上抛速度 < 0)
      {
         上抛速度 += 上抛阻力;
      }
      if(上抛速度 > 0)
      {
         上抛速度 = 0;
      }
      if(速度 < 速度上限)
      {
         速度 = 速度 + 加速度 - 速度 * 飞行阻力;
      }
      旋转角度 = _parent._rotation;
      this.转换导弹坐标();
      锁定延迟 += 1;
      if(锁定延迟 and 攻击目标 == "无")
      {
         this.寻找攻击目标();
         锁定延迟 = -29;
      }
      if(瞄准许可 and 转向动力)
      {
         转向动力 -= 1;
         修正角度 = (Math.atan2(锁定坐标.y - 导弹坐标.y,锁定坐标.x - 导弹坐标.x) + 360) % 360 * (180 / Math.PI) - 旋转角度;
         if(修正角度 > 转向速度)
         {
            修正角度 = 转向速度;
         }
         else if(修正角度 + 转向速度 < 0)
         {
            修正角度 = -1 * 转向速度;
         }
         else if(!(修正角度 <= 转向速度 and 修正角度 >= -1 * 转向速度))
         {
            修正角度 = 0;
         }
         if(速度 > 转向速度下限)
         {
            速度 -= Math.abs(修正角度 * 转向阻力);
         }
      }
      else
      {
         修正角度 = 0;
      }
      旋转角度 = 修正角度 + 旋转角度;
      _parent._rotation = 旋转角度;
      dx = Math.cos(旋转角度 * (Math.PI / 180)) * 速度 * 发射速度 / 基准速度;
      dy = Math.sin(旋转角度 * (Math.PI / 180)) * 速度 * 发射速度 / 基准速度;
      _parent._x += dx;
      _parent._y += dy + 上抛速度;
   };
}]]></script>
                  </Actionscript>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="100" duration="9" keyMode="9728">
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="图层 1" color="#4FFF4F">
          <frames>
            <DOMFrame index="0" duration="100" keyMode="9728">
              <elements>
                <DOMSymbolInstance libraryItemName="MissileB2" centerPoint3DX="13.2" centerPoint3DY="3.2">
                  <matrix>
                    <Matrix tx="-2.3" ty="-2.85"/>
                  </matrix>
                  <transformationPoint>
                    <Point x="15.5" y="6.05"/>
                  </transformationPoint>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="100" duration="9" keyMode="9728">
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
      </layers>
    </DOMTimeline>
  </timeline>
</DOMSymbolItem>