<DOMSymbolItem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://ns.adobe.com/xfl/2008/" name="sprite 96 (￧�ￍ￭￺￿垿￧ﾷ￹￨﾿ﾟ￦ﾗﾠ￤ﾺﾺ￦ﾜﾺ)" itemID="561603d5-00000061" linkageExportForAS="true" linkageIdentifier="￧�ￍ￭￺￿垿￧ﾷ￹￨ﾈﾟ￦ﾗﾠ￤ﾺﾺ￦ﾜﾺ" sourceFlashFilepath="../../../../../../../../../../Users/admin/Downloads/收割者无人机.fla" sourceLibraryItemHRef="sprite 96 (￧�ￍ￭￺￿垿￧ﾷ￹￨﾿ﾟ￦ﾗﾠ￤ﾺﾺ￦ﾜﾺ)" sourceLastModified="1445526556" lastModified="1445666782" lastUniqueIdentifier="30" sourceItemID="561603d5-00000061">
  <timeline>
    <DOMTimeline name="sprite 96 (￧�ￍ￭￺￿垿￧ﾷ￹￨﾿ﾟ￦ﾗﾠ￤ﾺﾺ￦ﾜﾺ)" currentFrame="4">
      <layers>
        <DOMLayer name="Action Layer" color="#FFFF00">
          <frames>
            <DOMFrame index="0" motionTweenScale="false" keyMode="8192">
              <Actionscript>
                <script><![CDATA[function 根据等级初始数值(等级值)
{
    hp满血值 = _root[根据等级计算值](hp_min, hp_max, 等级值) * _root["难度等级"];
    空手攻击力 = _root[根据等级计算值](eval("空手攻击力_min"), eval("空手攻击力_max"), 等级值) * _root["难度等级"];
    行走X速度 = _root[根据等级计算值](eval("速度_min"), eval("速度_max"), 等级值) / 10;
    行走Y速度 = eval("行走X速度") / 2;
    跑X速度 = eval("行走X速度") * 2;
    跑Y速度 = eval("行走X速度");
    被击硬直度 = _root[根据等级计算值](eval("被击硬直度_min"), eval("被击硬直度_max"), 等级值);
    起跳速度 = -10;
    基本防御力 = _root[根据等级计算值](eval("基本防御力_min"), eval("基本防御力_max"), 等级值);
    防御力 = eval("基本防御力") + eval("装备防御力");
    躲闪率 = _root[根据等级计算值](eval("躲闪率_min"), eval("躲闪率_max"), 等级值);
    if (hp == undefined)
    {
        hp = hp满血值;
    } // end if
} // End of the function
function 非主角外观刷新()
{
    _root[长枪配置](this._name, this["长枪"]);
    _root[手枪配置](this._name, this["手枪"]);
    _root[手枪2配置](this._name, this["手枪2"]);
    _root[手雷配置](this._name, this["手雷"]);
    _root[刀配置](this._name, this["刀"]);
    this["脸型"] = eval("脸型");
    tmp_aaa = _root[根据物品名查找属性](eval("头部装备"), 14);
    if (tmp_aaa[0] == true)
    {
        this["发型"] = "";
    }
    else
    {
        this["发型"] = eval("发型");
    } // end else if
    this["面具"] = _root[根据物品名查找属性](eval("头部装备"), 15);
    this["身体"] = _root[根据物品名查找属性](eval("上装装备"), 15) + "身体";
    this["上臂"] = _root[根据物品名查找属性](eval("上装装备"), 15) + "上臂";
    this["左下臂"] = _root[根据物品名查找属性](eval("上装装备"), 15) + "左下臂";
    this["右下臂"] = _root[根据物品名查找属性](eval("上装装备"), 15) + "右下臂";
    this["左手"] = _root[根据物品名查找属性](eval("手部装备"), 15) + "左手";
    this["右手"] = _root[根据物品名查找属性](eval("手部装备"), 15) + "右手";
    this["屁股"] = _root[根据物品名查找属性](eval("下装装备"), 15) + "屁股";
    this["左大腿"] = _root[根据物品名查找属性](eval("下装装备"), 15) + "左大腿";
    this["右大腿"] = _root[根据物品名查找属性](eval("下装装备"), 15) + "右大腿";
    this["小腿"] = _root[根据物品名查找属性](eval("下装装备"), 15) + "小腿";
    this["脚"] = _root[根据物品名查找属性](eval("脚部装备"), 15);
    this["刀_装扮"] = _root[根据物品名查找属性](eval("刀"), 15);
    this["长枪_装扮"] = _root[根据物品名查找属性](eval("长枪"), 15);
    this["手枪_装扮"] = _root[根据物品名查找属性](eval("手枪"), 15);
    this["手枪2_装扮"] = _root[根据物品名查找属性](eval("手枪2"), 15);
    this["手雷_装扮"] = _root[根据物品名查找属性](eval("手雷"), 15);
    this.gotoAndPlay("刷新装扮");
    f1 = _root[根据物品名查找属性](eval("头部装备"), 8);
    f2 = _root[根据物品名查找属性](eval("上装装备"), 8);
    f3 = _root[根据物品名查找属性](eval("手部装备"), 8);
    f4 = _root[根据物品名查找属性](eval("下装装备"), 8);
    f5 = _root[根据物品名查找属性](eval("脚部装备"), 8);
    装备防御力 = 0;
    if (f1 != undefined)
    {
        装备防御力 = eval("装备防御力") + f1;
    } // end if
    if (f2 != undefined)
    {
        装备防御力 = eval("装备防御力") + f2;
    } // end if
    if (f3 != undefined)
    {
        装备防御力 = eval("装备防御力") + f3;
    } // end if
    if (f4 != undefined)
    {
        装备防御力 = eval("装备防御力") + f4;
    } // end if
    if (f5 != undefined)
    {
        装备防御力 = eval("装备防御力") + f5;
    } // end if
    防御力 = eval("基本防御力") + eval("装备防御力");
    if (eval("防御力") > 90000)
    {
        防御力 = 90000;
    } // end if
} // End of the function
function 行走()
{
    if (this["右行"] == 1 || this["左行"] == 1 || this["上行"] == 1 || this["下行"] == 1)
    {
        if (eval("状态") != eval("攻击模式") + "跑")
        {
            if (this["右行"] == 1)
            {
                方向改变("右");
                状态改变(eval("攻击模式") + "行走");
                移动("右", eval("行走X速度"));
            }
            else if (this["左行"] == 1)
            {
                方向改变("左");
                状态改变(eval("攻击模式") + "行走");
                移动("左", eval("行走X速度"));
            } // end else if
            if (this["下行"] == 1)
            {
                状态改变(eval("攻击模式") + "行走");
                移动("下", eval("行走Y速度"));
            }
            else if (this["上行"] == 1)
            {
                状态改变(eval("攻击模式") + "行走");
                移动("上", eval("行走Y速度"));
            } // end else if
        }
        else
        {
            if (this["右行"] == 1)
            {
                方向改变("右");
                状态改变(eval("攻击模式") + "跑");
                移动("右", eval("跑X速度"));
            }
            else if (this["左行"] == 1)
            {
                方向改变("左");
                状态改变(eval("攻击模式") + "跑");
                移动("左", eval("跑X速度"));
            } // end else if
            if (this["下行"] == 1)
            {
                状态改变(eval("攻击模式") + "跑");
                移动("下", eval("跑Y速度"));
            }
            else if (this["上行"] == 1)
            {
                状态改变(eval("攻击模式") + "跑");
                移动("上", eval("跑Y速度"));
            } // end else if
        } // end else if
    }
    else
    {
        状态改变(eval("攻击模式") + "站立");
    } // end else if
} // End of the function
function 移动(移动方向, 速度)
{
    var _loc4 = {x: this._x, y: this.Z轴坐标};
    _root.gameworld.localToGlobal(_loc4);
    xx = _loc4.x;
    yy = _loc4.y;
    if (移动方向 == "右" && this._x + 速度 < _root.Xmax && _root.gameworld["地图"].hitTest(xx + 速度, yy, true) == false)
    {
        this._x = this._x + 速度;
    }
    else if (移动方向 == "左" && this._x - 速度 > _root.Xmin && _root.gameworld["地图"].hitTest(xx - 速度, yy, true) == false)
    {
        this._x = this._x - 速度;
    } // end else if
    if (移动方向 == "下" && this._y + 速度 < _root.Ymax && _root.gameworld["地图"].hitTest(xx, yy + 速度, true) == false)
    {
        Z轴坐标 = Z轴坐标 + 速度;
        this._y = Z轴坐标;
        this.swapDepths(this._y);
    }
    else if (移动方向 == "上" && this._y - 速度 > _root.Ymin && _root.gameworld["地图"].hitTest(xx, yy - 速度, true) == false)
    {
        Z轴坐标 = Z轴坐标 - 速度;
        this._y = Z轴坐标;
        this.swapDepths(this._y);
    } // end else if
} // End of the function
function 被击移动(移动方向, 速度, 摩擦力)
{
    移动钝感硬直(_root["钝感硬直时间"]);
    减速度 = 摩擦力;
    speed = 速度;
    if (移动方向 == "右")
    {
        this.onEnterFrame = function ()
        {
            if (eval("硬直中") == false)
            {
                speed = speed - eval("减速度");
                this[移动]("右", speed);
                if (speed <= 0)
                {
                    delete this.onEnterFrame;
                } // end if
            } // end if
        };
    }
    else
    {
        this.onEnterFrame = function ()
        {
            if (eval("硬直中") == false)
            {
                speed = speed - eval("减速度");
                this[移动]("左", speed);
                if (speed <= 0)
                {
                    delete this.onEnterFrame;
                } // end if
            } // end if
        };
    } // end else if
} // End of the function
function 拾取()
{
    状态改变("拾取");
} // End of the function
function 跳()
{
    if (eval("状态") == eval("攻击模式") + "站立")
    {
        跳横移速度 = 0;
    }
    else if (eval("状态") == eval("攻击模式") + "行走")
    {
        跳横移速度 = eval("行走X速度");
    }
    else if (eval("状态") == eval("攻击模式") + "跑")
    {
        跳横移速度 = eval("跑X速度");
    } // end else if
    this["动画是否正在播放"] = true;
    状态改变(eval("攻击模式") + "跳");
} // End of the function
function 方向改变(新方向)
{
    if (新方向 == "右")
    {
        方向 = "右";
        this._xscale = myxscale;
        eval("人物文字信息")._xscale = 100;
    }
    else if (新方向 == "左")
    {
        方向 = "左";
        this._xscale = -myxscale;
        eval("人物文字信息")._xscale = -100;
    } // end else if
} // End of the function
function 状态改变(新状态名)
{
    状态 = 新状态名;
    this.gotoAndStop(新状态名);
} // End of the function
function 动画完毕()
{
    状态改变(eval("攻击模式") + "站立");
} // End of the function
function 硬直(目标, 时间)
{
    function pause()
    {
        eval(eval("目标")).play();
        clearInterval(pauseInterval);
    } // End of the function
    clearInterval(pauseInterval);
    eval(eval("目标")).stop();
    pauseInterval = setInterval(pause, eval("时间"));
} // End of the function
function 移动钝感硬直(时间)
{
    function pause2()
    {
        硬直中 = false;
        clearInterval(pauseInterval2);
    } // End of the function
    硬直中 = true;
    clearInterval(pauseInterval2);
    pauseInterval2 = setInterval(pause2, 时间);
} // End of the function
function 攻击模式切换(模式)
{
    if (模式 == "空手")
    {
        攻击模式 = 模式;
        gotoAndStop("攻击模式切换");
    } // end if
    if (模式 == "手雷" && eval("手雷") != "")
    {
        攻击模式 = 模式;
        gotoAndStop("攻击模式切换");
    } // end if
    if (模式 == "长枪" && eval("长枪") != "")
    {
        攻击模式 = 模式;
        gotoAndStop("攻击模式切换");
    } // end if
    if (模式 == "兵器" && eval("刀") != "")
    {
        攻击模式 = 模式;
        gotoAndStop("攻击模式切换");
    } // end if
    if (模式 == "手枪")
    {
        if (eval("手枪2") != "" && eval("手枪") != "")
        {
            攻击模式 = "双枪";
            gotoAndStop("攻击模式切换");
        }
        else if (eval("手枪") != "")
        {
            攻击模式 = "手枪";
            gotoAndStop("攻击模式切换");
        }
        else if (eval("手枪2") != "")
        {
            攻击模式 = "手枪2";
            gotoAndStop("攻击模式切换");
        } // end else if
    } // end else if
    if (_root["控制目标"] == this._name)
    {
        _root["玩家必要信息界面"].gotoAndStop(eval("攻击模式"));
    } // end if
} // End of the function
function 按键控制攻击模式()
{
    if (Key.isDown(_root["键1"]))
    {
        攻击模式切换("空手");
    }
    else if (Key.isDown(_root["键2"]))
    {
        攻击模式切换("兵器");
    }
    else if (Key.isDown(_root["键3"]))
    {
        攻击模式切换("手枪");
    }
    else if (Key.isDown(_root["键4"]))
    {
        攻击模式切换("长枪");
    }
    else if (Key.isDown(_root["键5"]))
    {
        攻击模式切换("手雷");
    } // end else if
} // End of the function
function 随机切换攻击模式()
{
    攻击模式随机数 = random(5);
    if (eval("攻击模式随机数") == 0)
    {
        攻击模式切换("空手");
    }
    else if (eval("攻击模式随机数") == 1 && eval("刀") != "")
    {
        攻击模式切换("兵器");
    }
    else if (eval("攻击模式随机数") == 2)
    {
        if (eval("手枪") != "" || eval("手枪2") != "")
        {
            攻击模式切换("手枪");
        } // end if
    }
    else if (eval("攻击模式随机数") == 3 && eval("长枪") != "")
    {
        攻击模式切换("长枪");
    }
    else if (eval("攻击模式随机数") == 4 && eval("手雷") != "")
    {
        攻击模式切换("手雷");
    } // end else if
} // End of the function
function 单发枪计时()
{
    单发枪计时_时间结束 = false;
    单发枪间隔 = setInterval(eval("单发枪可以射击"), eval("单发枪射击速度"));
} // End of the function
function 单发枪可以射击()
{
    单发枪计时_时间结束 = true;
    clearInterval(eval("单发枪间隔"));
} // End of the function
function 单发枪计时_2()
{
    单发枪计时_时间结束_2 = false;
    单发枪间隔_2 = setInterval(eval("单发枪可以射击_2"), eval("单发枪射击速度"));
} // End of the function
function 单发枪可以射击_2()
{
    单发枪计时_时间结束_2 = true;
    clearInterval(eval("单发枪间隔_2"));
} // End of the function
function 随机掉钱()
{
    if (random(_root["打怪掉钱机率"]) == 0)
    {
        _root[创建可拾取物]("金钱", random(Math.floor(hp满血值 / 5)), _x, _y, true);
    } // end if
} // End of the function
function 计算经验值()
{
    随机掉钱();
    _root[经验值计算](eval("最小经验值"), eval("最大经验值"), eval("等级"), _root["最大等级"]);
    _root[主角是否升级](_root["等级"], _root["经验值"]);
    this["已加经验值"] = true;
} // End of the function
function 攻击呐喊()
{
    if (eval("性别") == "女")
    {
        _root[播放音效](eval("女_攻击呐喊_库")[random(eval("女_攻击呐喊_库").length)]);
    }
    else
    {
        _root[播放音效](eval("男_攻击呐喊_库")[random(eval("男_攻击呐喊_库").length)]);
    } // end else if
} // End of the function
function 中招呐喊()
{
    if (eval("性别") == "女")
    {
        _root[播放音效](eval("女_中招呐喊_库")[random(eval("女_中招呐喊_库").length)]);
    }
    else
    {
        _root[播放音效](eval("男_中招呐喊_库")[random(eval("男_中招呐喊_库").length)]);
    } // end else if
} // End of the function
function 击倒呐喊()
{
    if (eval("性别") == "女")
    {
        _root[播放音效](eval("女_击倒呐喊_库")[random(eval("女_击倒呐喊_库").length)]);
    }
    else
    {
        _root[播放音效](eval("男_击倒呐喊_库")[random(eval("男_击倒呐喊_库").length)]);
    } // end else if
} // End of the function
if (_root["控制目标"] == this._name)
{
    等级 = _root["等级"];
    是否为敌人 = false;
    名字 = _root["角色名"];
    身高 = _root["身高"];
    _root[刷新人物装扮](this._name);
    
} // end if
最小经验值 = 300;
最大经验值 = 12000;
hp_min = 2000;
hp_max = 5500;
速度_min = 18;
速度_max = 30;
空手攻击力_min = 30;
空手攻击力_max = 200;
被击硬直度_min = 1000;
被击硬直度_max = 200;
躲闪率_min = 10;
躲闪率_max = 3;
if (eval("称号") == undefined)
{
    称号 = "";
} // end if
基本防御力_min = 300;
基本防御力_max = 600;
装备防御力 = 0;
身高转换值 = _root[身高百分比转换](this["身高"]);
this._xscale = eval("身高转换值");
this._yscale = eval("身高转换值");
this.swapDepths(this._y + random(10) - 5);
停止机率 = 50;
随机移动机率 = 50;
根据等级初始数值(eval("等级"));
攻击目标 = "无";
x轴攻击范围 = 100;
y轴攻击范围 = 10;
x轴保持距离 = 50;
攻击模式 = "空手";
状态 = eval("攻击模式") + "站立";
方向 = "右";
格斗架势 = false;
击中效果 = "火花";
Z轴坐标 = this._y;
myxscale = this._xscale;
浮空 = false;
倒地 = false;
硬直中 = false;
强制换弹夹 = false;
攻击欲望 = 5;
长枪射击次数 = 0;
手枪射击次数 = 0;
手枪2射击次数 = 0;
手雷射击次数 = 0;
单发枪射击速度 = 1000;
单发枪计时_时间结束 = true;
单发枪计时_时间结束_2 = true;
性别 = "男";
男_攻击呐喊_库 = ["11_kda_a_1-22.wav", "23_kda_sy_1-22.wav", "01_kyn_a_2-22.wav", "25_kyo_sb-22.wav", "20_kyn_h_9-22.wav"];
女_攻击呐喊_库 = ["01_kin_a_1-22.wav", "02_kin_a_2-22.wav", "03_kin_a_3-22.wav", "19_kin_nage-22.wav"];
男_中招呐喊_库 = ["男-主角-0.wav", "男-主角-1.wav", "男-主角-2.wav", "主角中招0.wav", "主角中招1.wav", "主角中招2.wav"];
女_中招呐喊_库 = ["05_kin_d_1-22.wav", "06_kin_d_2-22.wav", "07_kin_d_3-22.wav", "08_kin_d_4-22.wav"];
男_击倒呐喊_库 = ["08_kyo_d_f-22.wav", "07_ben_d_f-22.wav", "06_cla_d_f-22.wav", "04_and_df1-22.wav"];
女_击倒呐喊_库 = ["女02.wav", "09_kin_d_f-22.wav"];
动画完毕();
]]></script>
              </Actionscript>
              <elements/>
            </DOMFrame>
            <DOMFrame index="1" duration="119" motionTweenScale="false" keyMode="8192">
              <Actionscript>
                <script><![CDATA[this.swapDepths(this._y);
]]></script>
              </Actionscript>
              <elements/>
            </DOMFrame>
            <DOMFrame index="120" motionTweenScale="false" keyMode="8192">
              <Actionscript>
                <script><![CDATA[hp = 0;
]]></script>
              </Actionscript>
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Label Layer" color="#FFFF00">
          <frames>
            <DOMFrame index="0" motionTweenScale="false" keyMode="8192">
              <elements/>
            </DOMFrame>
            <DOMFrame index="1" duration="8" name="空手站立" labelType="name" motionTweenScale="false" keyMode="8192">
              <elements/>
            </DOMFrame>
            <DOMFrame index="9" duration="10" name="空手行走" labelType="name" motionTweenScale="false" keyMode="8192">
              <elements/>
            </DOMFrame>
            <DOMFrame index="19" duration="10" name="空手跑" labelType="name" motionTweenScale="false" keyMode="8192">
              <elements/>
            </DOMFrame>
            <DOMFrame index="29" duration="8" name="空手跳" labelType="name" motionTweenScale="false" keyMode="8192">
              <elements/>
            </DOMFrame>
            <DOMFrame index="37" duration="4" name="近战" labelType="name" motionTweenScale="false" keyMode="8192">
              <elements/>
            </DOMFrame>
            <DOMFrame index="41" duration="10" name="空手攻击" labelType="name" motionTweenScale="false" keyMode="8192">
              <elements/>
            </DOMFrame>
            <DOMFrame index="51" duration="10" name="拾取" labelType="name" motionTweenScale="false" keyMode="8192">
              <elements/>
            </DOMFrame>
            <DOMFrame index="61" duration="10" name="躲闪" labelType="name" motionTweenScale="false" keyMode="8192">
              <elements/>
            </DOMFrame>
            <DOMFrame index="71" duration="8" name="被击" labelType="name" motionTweenScale="false" keyMode="8192">
              <elements/>
            </DOMFrame>
            <DOMFrame index="79" duration="9" name="击倒" labelType="name" motionTweenScale="false" keyMode="8192">
              <elements/>
            </DOMFrame>
            <DOMFrame index="88" duration="7" name="倒地" labelType="name" motionTweenScale="false" keyMode="8192">
              <elements/>
            </DOMFrame>
            <DOMFrame index="95" duration="9" name="被投" labelType="name" motionTweenScale="false" keyMode="8192">
              <elements/>
            </DOMFrame>
            <DOMFrame index="104" duration="16" name="血腥死" labelType="name" motionTweenScale="false" keyMode="8192">
              <elements/>
            </DOMFrame>
            <DOMFrame index="120" name="消失" labelType="name" motionTweenScale="false" keyMode="8192">
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer 23" color="#FFFF00">
          <frames>
            <DOMFrame index="0" duration="120" motionTweenScale="false" keyMode="8192">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite 27" name="人物文字信息">
                  <matrix>
                    <Matrix tx="1" ty="-170.8"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer 21" color="#FFFF00">
          <frames>
            <DOMFrame index="0" duration="120" motionTweenScale="false" keyMode="8192">
              <elements>
                <DOMSymbolInstance libraryItemName="button 15" symbolType="button">
                  <matrix>
                    <Matrix a="2.11715698242188" d="5.48248291015625" tx="-26.45" ty="-126.5"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <Actionscript>
                    <script><![CDATA[on (press)
{
    if (_root["控制目标"] == this._name && this.hp > 0)
    {
        gotoAndStop("被击");
    } // end if
    if (eval("是否为敌人") == true && _root["全鼠标控制"] == true && this.hp > 0)
    {
        _root.gameworld[_root["控制目标"]]["攻击目标"] = this._name;
        _root["控制目标全自动"] = true;
    } // end if
}
on (press, release, rollOver)
{
    if (eval("是否为敌人") == true && _root["全鼠标控制"] == true && this.hp > 0)
    {
        _root["鼠标"].gotoAndStop("手型攻击");
    } // end if
}
on (rollOut)
{
    _root["鼠标"].gotoAndStop("手型普通");
}
]]></script>
                  </Actionscript>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer 13" color="#FFFF00">
          <frames>
            <DOMFrame index="0" duration="87" tweenType="motion" motionTweenSnap="true" keyMode="22017">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite 14" name="area">
                  <matrix>
                    <Matrix a="2.11715698242188" d="5.48248291015625" tx="-26.45" ty="-126.5"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="87" motionTweenScale="false" keyMode="8192">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite 14" name="area">
                  <matrix>
                    <Matrix a="2.11715698242188" d="5.48248291015625" tx="-26.45" ty="-126.5"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="88" duration="7" motionTweenScale="false" keyMode="8192">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite 14" name="area">
                  <matrix>
                    <Matrix a="5.72386169433594" d="1.68098449707031" tx="-63.6" ty="-31.65"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer 11" color="#FFFF00">
          <frames>
            <DOMFrame index="0" duration="29" motionTweenScale="false" keyMode="8192">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite 12">
                  <matrix>
                    <Matrix a="9.27993774414063" d="0.72247314453125" tx="-1.45" ty="-120.1"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <Actionscript>
                    <script><![CDATA[onClipEvent (enterFrame)
{
    if (this._currentframe == 1)
    {
        if (this.hitTest(_root.gameworld[_parent["攻击目标"]].area) && Math.abs(_parent._y - _root.gameworld[_parent["攻击目标"]].Z轴坐标) <= _parent.y轴攻击范围)
        {
            play ();
            if (random(_parent["攻击欲望"]) == 0)
            {
                _parent["近战招式"] = "a0";
                _parent[状态改变]("近战");
            } // end if
        } // end if
    } // end if
}
]]></script>
                  </Actionscript>
                  <color>
                    <Color alphaMultiplier="0"/>
                  </color>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer 9" color="#FFFF00">
          <frames>
            <DOMFrame index="0" duration="29" motionTweenScale="false" keyMode="8192">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite 10">
                  <matrix>
                    <Matrix tx="-36" ty="16.35"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer 7" color="#FFFF00">
          <frames>
            <DOMFrame index="0" duration="29" motionTweenScale="false" keyMode="8192">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite 8" name="控制块">
                  <matrix>
                    <Matrix a="0.01446533203125" d="0.0158538818359375" tx="-31.5" ty="-21"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <Actionscript>
                    <script><![CDATA[onClipEvent (enterFrame)
{
    _parent[行走]();
}
]]></script>
                  </Actionscript>
                  <color>
                    <Color alphaMultiplier="0"/>
                  </color>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer 6" color="#FFFF00">
          <frames>
            <DOMFrame index="0" duration="95" motionTweenScale="false" keyMode="8192">
              <elements/>
            </DOMFrame>
            <DOMFrame index="95" duration="9" motionTweenScale="false" keyMode="8192">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite 42" name="area">
                  <matrix>
                    <Matrix a="2.11715698242188" d="5.48651123046875"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <Actionscript>
                    <script><![CDATA[onClipEvent (enterFrame)
{
    this._rotation = _parent.man._rotation;
}
]]></script>
                  </Actionscript>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer 1" color="#FFFF00" current="true" isSelected="true">
          <frames>
            <DOMFrame index="0" duration="9" motionTweenScale="false" keyMode="8192">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite 6" name="man">
                  <matrix>
                    <Matrix tx="-19.05" ty="-57.85"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <Actionscript>
                    <script><![CDATA[onClipEvent (load)
{
    gotoAndPlay(random(15));
}
]]></script>
                  </Actionscript>
                  <filters>
                    <AdjustColorFilter/>
                  </filters>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="9" duration="10" motionTweenScale="false" keyMode="8192">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite 28" name="man">
                  <matrix>
                    <Matrix tx="-18.05" ty="-58.35"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <filters>
                    <AdjustColorFilter/>
                  </filters>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="19" duration="10" motionTweenScale="false" keyMode="8192">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite 29" name="man">
                  <matrix>
                    <Matrix tx="-18.05" ty="-58.35"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <filters>
                    <AdjustColorFilter/>
                  </filters>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="29" duration="8" motionTweenScale="false" keyMode="8192">
              <elements/>
            </DOMFrame>
            <DOMFrame index="37" duration="4" motionTweenScale="false" keyMode="8192">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite 31" name="man" selected="true" centerPoint3DX="101.9" centerPoint3DY="-54.9">
                  <matrix>
                    <Matrix a="-1" tx="88.6" ty="-170.1"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <Actionscript>
                    <script><![CDATA[onClipEvent (load)
{
}
onClipEvent (unload)
{
}
]]></script>
                  </Actionscript>
                  <filters>
                    <AdjustColorFilter/>
                  </filters>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="41" duration="10" motionTweenScale="false" keyMode="8192">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite 35" name="man">
                  <matrix>
                    <Matrix tx="6.45" ty="-63.5"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <filters>
                    <AdjustColorFilter/>
                  </filters>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="51" duration="10" motionTweenScale="false" keyMode="8192">
              <elements/>
            </DOMFrame>
            <DOMFrame index="61" duration="10" motionTweenScale="false" keyMode="8192">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite 36" name="man">
                  <matrix>
                    <Matrix tx="-16.15" ty="-51.7"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <Actionscript>
                    <script><![CDATA[onClipEvent (load)
{
    gotoAndPlay("a" + random(2));
}
]]></script>
                  </Actionscript>
                  <filters>
                    <AdjustColorFilter/>
                  </filters>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="71" duration="8" motionTweenScale="false" keyMode="8192">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite 36" name="man">
                  <matrix>
                    <Matrix tx="-17.5" ty="-52.7"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <Actionscript>
                    <script><![CDATA[onClipEvent (load)
{
    gotoAndPlay("a" + random(2));
}
]]></script>
                  </Actionscript>
                  <filters>
                    <AdjustColorFilter/>
                  </filters>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="79" duration="9" motionTweenScale="false" keyMode="8192">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite 37" name="man">
                  <matrix>
                    <Matrix tx="-19.6" ty="-52.7"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <Actionscript>
                    <script><![CDATA[onClipEvent (load)
{
    _parent["浮空"] = true;
    gotoAndPlay(_parent["攻击模式"]);
}
onClipEvent (unload)
{
    _parent["浮空"] = false;
}
onClipEvent (load)
{
    落地 = false;
    垂直速度 = _parent["起跳速度"];
    起始Y = _parent._y;
    this.onEnterFrame = function ()
    {
        if (_parent["硬直中"] == false)
        {
            _parent._y = _parent._y + eval("垂直速度");
            垂直速度 = eval("垂直速度") + _root["重力加速度"];
            if (_parent._y >= _parent.Z轴坐标)
            {
                _parent._y = eval("起始Y");
                落地 = true;
                delete this.onEnterFrame;
                _parent[状态改变]("倒地");
            } // end if
        } // end if
    };
}
]]></script>
                  </Actionscript>
                  <filters>
                    <AdjustColorFilter/>
                  </filters>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="88" duration="7" motionTweenScale="false" keyMode="8192">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite 40" name="man">
                  <matrix>
                    <Matrix tx="-18" ty="-52.7"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <Actionscript>
                    <script><![CDATA[onClipEvent (load)
{
    _parent._y = _parent.Z轴坐标;
    _parent["倒地"] = true;
    _parent["格斗架势"] = true;
}
onClipEvent (unload)
{
    _parent["倒地"] = false;
}
]]></script>
                  </Actionscript>
                  <filters>
                    <AdjustColorFilter/>
                  </filters>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="95" duration="9" motionTweenScale="false" keyMode="8192">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite 37" name="man">
                  <matrix>
                    <Matrix tx="-26.3" ty="-52.7"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <Actionscript>
                    <script><![CDATA[onClipEvent (load)
{
    _parent["浮空"] = true;
    gotoAndPlay(_parent["攻击模式"]);
}
onClipEvent (unload)
{
    _parent["浮空"] = false;
}
onClipEvent (load)
{
    落地 = false;
    垂直速度 = _parent["起跳速度"];
    起始Y = _parent._y;
    this.onEnterFrame = function ()
    {
        if (_parent["硬直中"] == false)
        {
            _parent._y = _parent._y + eval("垂直速度");
            垂直速度 = eval("垂直速度") + _root["重力加速度"];
            if (_parent._y >= _parent.Z轴坐标)
            {
                _parent._y = eval("起始Y");
                落地 = true;
                delete this.onEnterFrame;
                _parent[状态改变]("倒地");
            } // end if
        } // end if
    };
}
]]></script>
                  </Actionscript>
                  <filters>
                    <AdjustColorFilter/>
                  </filters>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="104" duration="16" motionTweenScale="false" keyMode="8192">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite 95">
                  <matrix>
                    <Matrix tx="8.5" ty="-72"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <Actionscript>
                    <script><![CDATA[onClipEvent (load)
{
    gotoAndPlay("a" + random(1));
}
]]></script>
                  </Actionscript>
                  <filters>
                    <AdjustColorFilter/>
                  </filters>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Dummy Layer" color="#FFFF00">
          <frames>
            <DOMFrame index="0" duration="127" motionTweenScale="false" keyMode="8192">
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
      </layers>
    </DOMTimeline>
  </timeline>
</DOMSymbolItem>