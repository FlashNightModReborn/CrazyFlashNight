<DOMSymbolItem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://ns.adobe.com/xfl/2008/" name="UI重构/合成系统检视框" itemID="6622136b-00002024" linkageExportForAS="true" linkageIdentifier="合成系统检视框" lastModified="1740316500" lastUniqueIdentifier="2">
  <timeline>
    <DOMTimeline name="合成系统检视框" currentFrame="4">
      <layers>
        <DOMLayer name="图层 1" color="#4FFF4F">
          <frames>
            <DOMFrame index="0" duration="4" name="空" labelType="name" keyMode="9728">
              <elements/>
            </DOMFrame>
            <DOMFrame index="4" duration="10" name="默认图标" labelType="name" keyMode="9728">
              <elements/>
            </DOMFrame>
            <DOMFrame index="14" duration="6" name="刷新" labelType="name" keyMode="9728">
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="图层 2" color="#9933CC">
          <frames>
            <DOMFrame index="0" keyMode="9728">
              <Actionscript>
                <script><![CDATA[stop();]]></script>
              </Actionscript>
              <elements/>
            </DOMFrame>
            <DOMFrame index="1" duration="13" keyMode="9728">
              <elements/>
            </DOMFrame>
            <DOMFrame index="14" duration="6" keyMode="9728">
              <Actionscript>
                <script><![CDATA[gotoAndStop("默认图标");
]]></script>
              </Actionscript>
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="图层 3" color="#FF800A">
          <frames>
            <DOMFrame index="0" duration="14" keyMode="9728">
              <elements/>
            </DOMFrame>
            <DOMFrame index="14" duration="6" keyMode="9728">
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="图层 4" color="#FF4FFF">
          <frames>
            <DOMFrame index="0" duration="14" keyMode="9728">
              <elements/>
            </DOMFrame>
            <DOMFrame index="14" duration="6" keyMode="9728">
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="图层 5" color="#4FFFFF">
          <frames>
            <DOMFrame index="0" duration="4" keyMode="9728">
              <elements/>
            </DOMFrame>
            <DOMFrame index="4" duration="10" keyMode="9728">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite/物品栏/物品已装备图标" centerPoint3DX="3.8" centerPoint3DY="11.15">
                  <matrix>
                    <Matrix ty="8"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="14" duration="6" keyMode="9728">
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="图标壳" color="#808080" current="true" isSelected="true" autoNamed="false">
          <frames>
            <DOMFrame index="0" duration="4" keyMode="9728">
              <elements/>
            </DOMFrame>
            <DOMFrame index="4" duration="10" keyMode="9728">
              <elements>
                <DOMSymbolInstance libraryItemName="sprite/图标壳" name="图标壳" selected="true" centerPoint3DX="12" centerPoint3DY="12">
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <Actionscript>
                    <script><![CDATA[onClipEvent(load){
   this.挂载物品完整装扮 = _root.挂载物品完整装扮;
   this.挂载物品完整装扮();
}]]></script>
                  </Actionscript>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="14" duration="6" keyMode="9728">
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="按钮" color="#FF4F4F" locked="true" autoNamed="false">
          <frames>
            <DOMFrame index="0" duration="4" keyMode="9728">
              <elements>
                <DOMSymbolInstance libraryItemName="shape/Symbol 1738" symbolType="graphic" loop="loop">
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="4" duration="10" keyMode="9728">
              <elements>
                <DOMSymbolInstance libraryItemName="button/Symbol 1743" symbolType="button">
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <Actionscript>
                    <script><![CDATA[on (rollOver) {
	if (_parent._name == "物品栏界面")
	{
		tmp_sz = _root.根据物品名查找全部属性(_root.物品栏[this.对应数组号][0]);
		_root.物品图标注释(tmp_sz,_root.物品栏[this.对应数组号][1]);
		if (是否装备 == undefined and _root.物品栏[this.对应数组号][2] == 0)
		{
			_root.鼠标.gotoAndStop("手型准备抓取");
		}
	}
	else if (_parent._name == "装备强化界面")
	{
		tmp_sz = _root.根据物品名查找全部属性(_root.物品栏[this.对应数组号][0]);
		_root.物品图标注释(tmp_sz,_root.物品栏[this.对应数组号][1]);
	}
	else if (_parent._name == "购买物品界面")
	{
		tmp_sz = _root.根据物品名查找全部属性(_root.购买物品界面.物品栏[this.对应数组号][0]);
		_root.物品图标注释(tmp_sz);
	}
	else if (_parent._name == "仓库界面")
	{
		tmp_sz = _root.根据物品名查找全部属性(_root.仓库栏[this.对应数组号][0]);
		_root.物品图标注释(tmp_sz,_root.仓库栏[this.对应数组号][1]);
		_root.鼠标.gotoAndStop("手型准备抓取");
	}
	tmp物品大类型 = tmp_sz[2];
}
on (rollOut) {
	_root.鼠标.gotoAndStop("手型普通");
	_root.注释结束();
}
on (press) {
	_root.注释结束();
	if (_parent._name == "物品栏界面")
	{
		if (是否装备 == undefined and _root.物品栏[this.对应数组号][2] == 0)
		{
			this.图标壳.图标.gotoAndStop(2);
			startDrag(this,1);
			_root.鼠标.gotoAndStop("手型抓取");
			if (_root.物品栏界面.getDepth() < _root.仓库界面.getDepth())
			{
				_root.物品栏界面.swapDepths(_root.仓库界面);
			}
			this.swapDepths(500 + random(100));
		}
	}
	else if (_parent._name == "仓库界面")
	{
		this.图标壳.图标.gotoAndStop(2);
		startDrag(this,1);
		_root.鼠标.gotoAndStop("手型抓取");
		if (_root.物品栏界面.getDepth() > _root.仓库界面.getDepth())
		{
			_root.仓库界面.swapDepths(_root.物品栏界面);
		}
		this.swapDepths(500 + random(100));
	}
}
on (release) {
	this.图标壳.图标.gotoAndStop(1);
	if (_parent._name == "物品栏界面")
	{
		var flag = false;
		if (_root.装备强化界面._visible == 1)
		{
			if (_root.装备强化界面.强化图标.hitTest(_root._xmouse, _root._ymouse, true) == true)
			{
				_root.装备强化界面.强化图标.图标 = this.图标;
				_root.装备强化界面.强化图标.对应数组号 = this.对应数组号;
				_root.装备强化界面.强化图标.临时物品名称 = _root.物品栏[this.对应数组号][0];
				_root.装备强化界面.强化图标.数量 = _root.物品栏[this.对应数组号][1];
				_root.装备强化界面.强化图标.gotoAndStop("刷新");
				_root.装备强化界面.是否可强化检测();
			}
			if (_root.装备强化界面.强化图标左.hitTest(_root._xmouse, _root._ymouse, true) == true)
			{
				_root.装备强化界面.强化图标左.图标 = this.图标;
				_root.装备强化界面.强化图标左.对应数组号 = this.对应数组号;
				_root.装备强化界面.强化图标左.临时物品名称 = _root.物品栏[this.对应数组号][0];
				_root.装备强化界面.强化图标左.数量 = _root.物品栏[this.对应数组号][1];
				_root.装备强化界面.强化图标左.gotoAndStop("刷新");
				_root.装备强化界面.是否可强化度转换检测();
			}
			if (_root.装备强化界面.强化图标右.hitTest(_root._xmouse, _root._ymouse, true) == true)
			{
				_root.装备强化界面.强化图标右.图标 = this.图标;
				_root.装备强化界面.强化图标右.对应数组号 = this.对应数组号;
				_root.装备强化界面.强化图标右.临时物品名称 = _root.物品栏[this.对应数组号][0];
				_root.装备强化界面.强化图标右.数量 = _root.物品栏[this.对应数组号][1];
				_root.装备强化界面.强化图标右.gotoAndStop("刷新");
				_root.装备强化界面.是否可强化度转换检测();
			}
		}
		if (_root.仓库界面.hitTest(_root._xmouse, _root._ymouse, true) == true and _root.仓库界面._visible == 1)
		{
			for (eachs in _root.仓库界面)
			{
				if (_root.仓库界面[eachs].area.hitTest(_root._xmouse, _root._ymouse, true))
				{
					if (tmp物品大类型 == "消耗品")
					{
						if (_root.物品栏[this.对应数组号][0] == _root.仓库栏[_root.仓库界面[eachs].对应数组号][0])
						{
							_root.仓库栏[_root.仓库界面[eachs].对应数组号] = [_root.物品栏[this.对应数组号][0], Number(_root.物品栏[this.对应数组号][1]) + Number(_root.仓库栏[_root.仓库界面[eachs].对应数组号][1]), 0];
							_root.物品栏[this.对应数组号] = ["空", 0, 0];
							_root.排列仓库物品图标();
							flag = true;
						}
						else
						{
							temp_h = this.对应数组号;
							temp_s = [_root.物品栏[temp_h][0], _root.物品栏[temp_h][1], 0];
							temp_t = [_root.仓库栏[_root.仓库界面[eachs].对应数组号][0], _root.仓库栏[_root.仓库界面[eachs].对应数组号][1], 0];
							_root.仓库栏[_root.仓库界面[eachs].对应数组号] = temp_s;
							_root.物品栏[this.对应数组号] = temp_t;
							_root.排列仓库物品图标();
							flag = true;
						}
					}
					else
					{
						temp_h = this.对应数组号;
						temp_s = [_root.物品栏[temp_h][0], _root.物品栏[temp_h][1], 0];
						temp_t = [_root.仓库栏[_root.仓库界面[eachs].对应数组号][0], _root.仓库栏[_root.仓库界面[eachs].对应数组号][1], 0];
						_root.仓库栏[_root.仓库界面[eachs].对应数组号] = temp_s;
						_root.物品栏[this.对应数组号] = temp_t;
						_root.排列仓库物品图标();
						flag = true;
					}
				}
			}
		}
		if (!flag)
		{
			for (each in _root.物品栏界面)
			{
				if (_root.物品栏界面[eval("each")]._name != this._name)
				{
					if (_root.物品栏界面[eval("each")].area.hitTest(_root._xmouse, _root._ymouse, true) and _root.物品栏界面[eval("each")].图标是否可对换位置 == 1 and _root.物品栏[_root.物品栏界面[eval("each")].对应数组号][2] != 1)
					{
						if (tmp物品大类型 == "消耗品")
						{
							if (_root.物品栏[this.对应数组号][0] == _root.物品栏[_root.物品栏界面[eval("each")].对应数组号][0])
							{
								temp_h = _root.物品栏界面[eval("each")].对应数组号;
								_root.物品栏[temp_h][1] = Number(_root.物品栏[temp_h][1]) + Number(_root.物品栏[this.对应数组号][1]);
								_root.物品栏[this.对应数组号] = ["空", 0, 0];
							}
							else
							{
								temp_h = _root.物品栏界面[eval("each")].对应数组号;
								temp_s = _root.物品栏[temp_h];
								_root.物品栏[temp_h] = _root.物品栏[this.对应数组号];
								_root.物品栏[this.对应数组号] = temp_s;
							}
						}
						else
						{
							temp_h = _root.物品栏界面[eval("each")].对应数组号;
							temp_s = _root.物品栏[temp_h];
							_root.物品栏[temp_h] = _root.物品栏[this.对应数组号];
							_root.物品栏[this.对应数组号] = temp_s;
						}
					}
				}
				if (_root.物品栏界面[eval("each")].area.hitTest(_root._xmouse, _root._ymouse, true) and _root.物品栏界面[eval("each")].是否装备 != undefined)
				{
					装备槽对应物品类别("长枪",数量);
					装备槽对应物品类别("手枪",数量);
					装备槽对应物品类别("刀",数量);
					装备槽对应物品类别("手雷");
					装备槽对应物品类别("头部装备",数量);
					装备槽对应物品类别("上装装备",数量);
					装备槽对应物品类别("手部装备",数量);
					装备槽对应物品类别("下装装备",数量);
					装备槽对应物品类别("脚部装备",数量);
					装备槽对应物品类别("颈部装备",数量);
				}
				if (_root.物品栏界面[eval("each")].area.hitTest(_root._xmouse, _root._ymouse, true) and _root.物品栏界面[eval("each")]._name == "垃圾箱")
				{
					if (_root.当前玩家总数 <= 1)
					{
					}
					_root.发布消息(_root.获得翻译("丢弃物品") + _root.获得翻译(_root.物品栏[this.对应数组号][0]));
					_root.物品栏[this.对应数组号] = ["空", 0, 0];
				}
				if (_root.物品栏界面[eval("each")].area.hitTest(_root._xmouse, _root._ymouse, true) and _root.快捷药剂界面.hitTest(_root._xmouse, _root._ymouse, true))
				{
					if (tmp_sz[3] == "药剂")
					{
						if (_root.快捷药剂界面.快捷物品栏1.hitTest(_root._xmouse, _root._ymouse, true))
						{
							_root.快捷药剂界面.快捷物品栏1.对应数组号 = this.对应数组号;
							_root.快捷药剂界面.快捷物品栏1.已装备名 = _root.物品栏[this.对应数组号][0];
							_root.快捷药剂界面.快捷物品栏1.是否装备 = 1;
							_root.快捷物品栏1 = _root.物品栏[this.对应数组号][0];
							_root.快捷药剂界面.快捷物品栏1.图标 = "图标-" + _root.getItemData(_root.快捷物品栏1).icon;
							_root.快捷药剂界面.快捷物品栏1.gotoAndStop("默认图标");
							_root.快捷药剂界面.快捷物品栏1.数量 = _root.物品栏[this.对应数组号][1];
							_root.物品栏[this.对应数组号][2] = 1;
						}
						else if (_root.快捷药剂界面.快捷物品栏2.hitTest(_root._xmouse, _root._ymouse, true))
						{
							_root.快捷药剂界面.快捷物品栏2.对应数组号 = this.对应数组号;
							_root.快捷药剂界面.快捷物品栏2.已装备名 = _root.物品栏[this.对应数组号][0];
							_root.快捷药剂界面.快捷物品栏2.是否装备 = 1;
							_root.快捷物品栏2 = _root.物品栏[this.对应数组号][0];
							_root.快捷药剂界面.快捷物品栏2.图标 = "图标-" + _root.getItemData(_root.快捷物品栏2).icon;
							_root.快捷药剂界面.快捷物品栏2.gotoAndStop("默认图标");
							_root.快捷药剂界面.快捷物品栏2.数量 = _root.物品栏[this.对应数组号][1];
							_root.物品栏[this.对应数组号][2] = 1;
						}
						else if (_root.快捷药剂界面.快捷物品栏3.hitTest(_root._xmouse, _root._ymouse, true))
						{
							_root.快捷药剂界面.快捷物品栏3.对应数组号 = this.对应数组号;
							_root.快捷药剂界面.快捷物品栏3.已装备名 = _root.物品栏[this.对应数组号][0];
							_root.快捷药剂界面.快捷物品栏3.是否装备 = 1;
							_root.快捷物品栏3 = _root.物品栏[this.对应数组号][0];
							_root.快捷药剂界面.快捷物品栏3.图标 = "图标-" + _root.getItemData(_root.快捷物品栏3).icon;
							_root.快捷药剂界面.快捷物品栏3.gotoAndStop("默认图标");
							_root.快捷药剂界面.快捷物品栏3.数量 = _root.物品栏[this.对应数组号][1];
							_root.物品栏[this.对应数组号][2] = 1;
						}
						else if (_root.快捷药剂界面.快捷物品栏4.hitTest(_root._xmouse, _root._ymouse, true))
						{
							_root.快捷药剂界面.快捷物品栏4.对应数组号 = this.对应数组号;
							_root.快捷药剂界面.快捷物品栏4.已装备名 = _root.物品栏[this.对应数组号][0];
							_root.快捷药剂界面.快捷物品栏4.是否装备 = 1;
							_root.快捷物品栏4 = _root.物品栏[this.对应数组号][0];
							_root.快捷药剂界面.快捷物品栏4.图标 = "图标-" + _root.getItemData(_root.快捷物品栏4).icon;
							_root.快捷药剂界面.快捷物品栏4.gotoAndStop("默认图标");
							_root.快捷药剂界面.快捷物品栏4.数量 = _root.物品栏[this.对应数组号][1];
							_root.物品栏[this.对应数组号][2] = 1;
						}
						_root.快捷药剂界面.gotoAndPlay("刷新");
					}
				}
			}
			if (_root.购买物品界面.hitTest(_root._xmouse, _root._ymouse, true) == true and _root.物品栏界面.hitTest(_root._xmouse, _root._ymouse, true) != false and _root.购买物品界面._visible == 1 and _root.物品栏界面.窗体area.hitTest(_root._xmouse, _root._ymouse, true) == false)
			{
				if (isNaN(tmp_sz[5]) == false)
				{
					_root.金钱 += Math.floor(Number(tmp_sz[5] * 0.25 * _root.物品栏[this.对应数组号][1]));
				}
				_root.物品栏[this.对应数组号] = ["空", 0, 0];
				_root.播放音效("收银机.mp3");
			}
		}
		stopDrag();
		_root.排列物品图标();
		this.removeMovieClip();
	}
	else if (_parent._name == "购买物品界面")
	{
		物品名 = _root.购买物品界面.物品栏[this.对应数组号][0];
		_root.购买物品界面.准备购买的物品 = 物品名;
		_root.购买物品界面.准备购买的物品单价 = tmp_sz[5];
		_root.购买物品界面.准备购买的物品等级限制 = tmp_sz[9];
		if (tmp_sz[2] == "消耗品")
		{
			_root.购买物品界面.gotoAndStop("购买数量");
		}
		else
		{
			_root.购买物品界面.gotoAndStop("结算");
		}
	}
	else if (_parent._name == "快捷药剂界面" and _root.全鼠标控制 == true)
	{
		_parent[this.控制器].gotoAndStop("已扣扳机");
	}
	else if (_parent._name == "仓库界面")
	{
		for (each in _root.仓库界面)
		{
			if (_root.仓库界面[eval("each")].area.hitTest(_root._xmouse, _root._ymouse, true) and _root.仓库界面[eval("each")]._name == "垃圾箱")
			{
				if (_root.当前玩家总数 <= 1)
				{
				}
				_root.发布消息(_root.获得翻译("丢弃物品") + _root.获得翻译(_root.仓库栏[this.对应数组号][0]));
				_root.仓库栏[this.对应数组号] = ["空", 0, 0];
			}
			if (_root.仓库界面[eval("each")]._name != this._name)
			{
				if (_root.仓库界面[eval("each")].area.hitTest(_root._xmouse, _root._ymouse, true) and _root.仓库界面[eval("each")].图标是否可对换位置 == 1 and _root.仓库栏[_root.仓库界面[eval("each")].对应数组号][2] != 1)
				{
					if (tmp物品大类型 == "消耗品")
					{
						if (_root.仓库栏[this.对应数组号][0] == _root.仓库栏[_root.仓库界面[eval("each")].对应数组号][0])
						{
							temp_h = _root.仓库界面[eval("each")].对应数组号;
							_root.仓库栏[temp_h][1] = Number(_root.仓库栏[temp_h][1]) + Number(_root.仓库栏[this.对应数组号][1]);
							_root.仓库栏[this.对应数组号] = ["空", 0, 0];
						}
						else
						{
							temp_h = _root.仓库界面[eval("each")].对应数组号;
							temp_s = _root.仓库栏[temp_h];
							_root.仓库栏[temp_h] = _root.仓库栏[this.对应数组号];
							_root.仓库栏[this.对应数组号] = temp_s;
						}
					}
					else
					{
						temp_h = _root.仓库界面[eval("each")].对应数组号;
						temp_s = _root.仓库栏[temp_h];
						_root.仓库栏[temp_h] = _root.仓库栏[this.对应数组号];
						_root.仓库栏[this.对应数组号] = temp_s;
					}
				}
			}
		}
		for (eachs in _root.物品栏界面)
		{
			if (_root.物品栏界面[eachs].area.hitTest(_root._xmouse, _root._ymouse, true))
			{
				if (tmp物品大类型 == "消耗品")
				{
					if (_root.仓库栏[this.对应数组号][0] == _root.物品栏[_root.物品栏界面[eachs].对应数组号][0])
					{
						_root.物品栏[_root.物品栏界面[eachs].对应数组号][1] = Number(_root.物品栏[_root.物品栏界面[eachs].对应数组号][1]) + Number(_root.仓库栏[this.对应数组号][1]);
						_root.仓库栏[this.对应数组号] = ["空", 0, 0];
						_root.排列物品图标();
					}
					else if (_root.物品栏[_root.物品栏界面[eachs].对应数组号][2] == 0)
					{
						temp_h = this.对应数组号;
						temp_s = [_root.仓库栏[temp_h][0], _root.仓库栏[temp_h][1], 0];
						temp_t = [_root.物品栏[_root.物品栏界面[eachs].对应数组号][0], _root.物品栏[_root.物品栏界面[eachs].对应数组号][1], 0];
						_root.物品栏[_root.物品栏界面[eachs].对应数组号] = temp_s;
						_root.仓库栏[this.对应数组号] = temp_t;
						_root.排列物品图标();
					}
				}
				else if (_root.物品栏[_root.物品栏界面[eachs].对应数组号][2] == 0)
				{
					temp_h = this.对应数组号;
					temp_s = [_root.仓库栏[temp_h][0], _root.仓库栏[temp_h][1], 0];
					temp_t = [_root.物品栏[_root.物品栏界面[eachs].对应数组号][0], _root.物品栏[_root.物品栏界面[eachs].对应数组号][1], 0];
					_root.物品栏[_root.物品栏界面[eachs].对应数组号] = temp_s;
					_root.仓库栏[this.对应数组号] = temp_t;
					_root.排列物品图标();
				}
			}
		}
		//尝试仓库直接售卖 
		if (_root.购买物品界面.hitTest(_root._xmouse, _root._ymouse, true) == true and _root.仓库界面.hitTest(_root._xmouse, _root._ymouse, true) != false and _root.购买物品界面._visible  and _root.仓库界面.窗体area.hitTest(_root._xmouse, _root._ymouse, true) == false)
		{
			if (isNaN(tmp_sz[5]) == false)
			{
				_root.金钱 += Math.floor(Number(tmp_sz[5] * 0.25 * _root.仓库栏[this.对应数组号][1]));
			}
			_root.仓库栏[this.对应数组号] = ["空", 0, 0];
			_root.播放音效("收银机.mp3");
		}
		stopDrag();
		_root.排列仓库物品图标();
		this.removeMovieClip();
	}
}]]></script>
                  </Actionscript>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="14" duration="6" keyMode="9728">
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="图层 9" color="#4FFF4F">
          <frames>
            <DOMFrame index="0" duration="14" keyMode="9728">
              <elements/>
            </DOMFrame>
            <DOMFrame index="14" duration="6" keyMode="9728">
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
      </layers>
    </DOMTimeline>
  </timeline>
</DOMSymbolItem>