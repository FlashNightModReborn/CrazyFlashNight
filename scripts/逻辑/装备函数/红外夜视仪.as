_root.装备生命周期函数.红外夜视仪初始化 = function(反射对象, 参数对象)
{
    var 自机 = 反射对象.自机;

    if(_root.装备生命周期函数.移除非主角周期函数(反射对象))
    {
        return;//非主角直接返回，并且移除周期函数
    }

    自机.红外夜视仪 = {};
    var 夜视仪 = 自机.红外夜视仪;
    夜视仪.视觉情况 = 参数对象.visual || "夜视仪";
    夜视仪.最小启动亮度 = 参数对象.min || 0;
    夜视仪.最大启动亮度 = 参数对象.max || 4;
    夜视仪.启用装备 = 反射对象.装备名称;
    夜视仪.装备类型 = 反射对象.装备类型;

    夜视仪.视觉影片剪辑 = 参数对象.visualMC || null;

    //_root.服务器.发布服务器消息(_root.常用工具函数.对象转JSON(自机, true));
    //_root.服务器.发布服务器消息(_root.常用工具函数.对象转JSON(夜视仪, true));

    _root.常用工具函数.设置卸载回调(自机, function() {
        _root.天气系统.夜视仪 = {};
    });    // 使用设置卸载回调函数
    var 卸载对象 = {动作:function(额外参数){
                    _root.天气系统.夜视仪 = {};
                   },
                   额外参数:{}};

    反射对象.生命周期函数列表.push(卸载对象);

    _root.天气系统.夜视仪 = 自机.红外夜视仪;

    var eventBus = EventBus.getInstance();
    // 使用标志位避免重复订阅
    if (!夜视仪.事件已订阅) {
        夜视仪.事件已订阅 = true;

        // 订阅红外夜视仪启动事件
        eventBus.subscribeOnce("红外夜视仪启动", function() {
            // 订阅夜视仪启动事件
            eventBus.subscribeOnce("夜视仪启动", function() {
                _root.发布消息("红外夜视仪启动");
            });

            eventBus.publish("夜视仪启动", 夜视仪.视觉影片剪辑);
        });
    }

    // 立即发布红外夜视仪启动事件
    eventBus.publish("红外夜视仪启动", 夜视仪.视觉影片剪辑);
};

_root.装备生命周期函数.红外夜视仪周期 = function(反射对象, 参数对象)
{
    _root.装备生命周期函数.移除异常周期函数(反射对象);
    
    var 自机 = 反射对象.自机;
    if(!自机.红外夜视仪)
    {
        _root.装备生命周期函数.红外夜视仪初始化(反射对象, 参数对象);
    }
    //_root.服务器.发布服务器消息("alive");
    _root.装备生命周期函数.移除周期函数(反射对象);
};

_root.装备生命周期函数.红外夜视仪周期.toString = function() { return "_root.装备生命周期函数.红外夜视仪周期"}