_root.装备生命周期函数.炎魔斩new初始化 = function(反射对象, 参数对象) 
{
   var 自机 = 反射对象.自机;

   if(反射对象.是否为主角)
   {
      var 标签 = 反射对象.标签名 + 反射对象.初始化函数;
      var 标签对象 = _root.装备生命周期函数.全局参数[标签];
      if(标签对象)
      {
         反射对象.链锯化 = 标签对象.链锯化;
      }
      else
      {
         _root.装备生命周期函数.全局参数[标签] = {};
         var 标签对象 = _root.装备生命周期函数.全局参数[标签];
         反射对象.链锯化 = false;
         标签对象.链锯化 = 反射对象.链锯化;
      }

      反射对象.标签对象 = 标签对象;//缓存降低索引开销
   }
   else
   {
      反射对象.链锯化 = false; //佣兵暂且不会切换形态所以姑且不同步
   }

   反射对象.成功率 = 参数对象.probability ? 参数对象.probability : 3;
   反射对象.锯齿子弹属性 = 反射对象.子弹配置.bullet_1;
   反射对象.链锯子弹属性 = 反射对象.子弹配置.bullet_2;
   反射对象.锯齿战技 = 参数对象.skill_0;
   反射对象.链锯战技 = 参数对象.skill_1;
   反射对象.链锯化切换间隔 = 参数对象.transformInterval ? 参数对象.transformInterval : 1000;
   反射对象.链锯化标签 = 参数对象.transformLabel ? 参数对象.transformLabel : "链锯化切换检测";
   反射对象.特效释放间隔 = 参数对象.interval ? 参数对象.interval : 666;
   反射对象.特效释放标签 = 参数对象.label ? 参数对象.label : "释放特效";
   反射对象.特效偏移计数 = 参数对象.effectYcount ? 参数对象.effectYcount : 0;
   反射对象.特效偏移上限 = 参数对象.effectYcoef ? 参数对象.effectYcoef : 5;
   反射对象.特效_x波动 = isNaN(参数对象.effectXfluc) ? 参数对象.effectXfluc : 50;
   反射对象.特效_x偏移 = isNaN(参数对象.effectXoffset) ? 参数对象.effectXoffset : 200;
   反射对象.特效_y偏移 = isNaN(参数对象.effectYoffset) ? 参数对象.effectYoffset : -50;

   var 锯齿间隔系数 = 参数对象.coefficient_0 ? 参数对象.coefficient_0 : 10;
   var 链锯间隔系数 = 参数对象.coefficient_1 ? 参数对象.coefficient_1 : 5;
   反射对象.锯齿战技特效间隔 = 反射对象.特效释放间隔 / 锯齿间隔系数;
   反射对象.链锯战技特效间隔 = 反射对象.特效释放间隔 / 链锯间隔系数;

   反射对象.锯齿剑起始帧 = 参数对象.startFrame_0 ? 参数对象.startFrame_0 : 1;
   反射对象.锯齿剑结束帧 = 参数对象.endFrame_0 ? 参数对象.endFrame_0 : 15;
   反射对象.形态转换起始帧 = 参数对象.startFrame_1 ? 参数对象.startFrame_1 : 16;
   反射对象.形态转换结束帧 = 参数对象.endFrame_1 ? 参数对象.endFrame_1 : 25;
   反射对象.链锯剑起始帧 = 参数对象.startFrame_2 ? 参数对象.startFrame_2 : 26;
   反射对象.链锯剑结束帧 = 参数对象.endFrame_2 ? 参数对象.endFrame_2 : 40;

   反射对象.当前帧 = 反射对象.链锯剑起始帧;

   if(反射对象.链锯化)
   {
      反射对象.子弹属性 = 反射对象.链锯子弹属性;
      自机.装载主动战技(反射对象.链锯战技, "兵器");
      反射对象.战技特效间隔 = 反射对象.链锯战技特效间隔;
   }
   else
   {
      反射对象.子弹属性 = 反射对象.锯齿子弹属性;
      自机.装载主动战技(反射对象.锯齿战技, "兵器");
      反射对象.战技特效间隔 = 反射对象.锯齿战技特效间隔;
   }

   if(反射对象.是否为主角)
   {
      _root.玩家信息界面.玩家必要信息界面.战技栏.战技栏图标刷新();
   }

   反射对象.链锯化执行函数 = function(反射对象)
   {
      if(反射对象.链锯化)
      {
         反射对象.链锯化 = false;
         反射对象.子弹属性 = 反射对象.锯齿子弹属性;
         反射对象.自机.装载主动战技(反射对象.锯齿战技, "兵器");
         反射对象.战技特效间隔 = 反射对象.锯齿战技特效间隔;
      }
      else
      {
         反射对象.链锯化 = true;
         反射对象.子弹属性 = 反射对象.链锯子弹属性;
         反射对象.自机.装载主动战技(反射对象.链锯战技, "兵器");
         反射对象.战技特效间隔 = 反射对象.链锯战技特效间隔;
      }

      反射对象.标签对象.链锯化 = 反射对象.链锯化;
   };

   反射对象.战技特效释放函数 = function(反射对象)
   {
      var 自机 = 反射对象.自机;
      var x = (自机.方向 === "左" ? -1 : 1) * 反射对象.特效_x偏移 + _root.随机偏移(反射对象.特效_x波动);
      var 坐标_x = 自机._x + x;
      var 坐标_y = 自机._y + 反射对象.特效_y偏移 * (反射对象.特效偏移计数++ * 2 / 反射对象.特效偏移上限);
      var 子弹属性 = 反射对象.子弹属性;

      反射对象.特效偏移计数 = 反射对象.特效偏移计数 % 反射对象.特效偏移上限;
      子弹属性.shootX = 坐标_x;
      子弹属性.shootY = 坐标_y;
      子弹属性.shootZ = 坐标_y;

      _root.子弹区域shoot传递(子弹属性);
   };

   反射对象.特效释放函数 = function(反射对象)
   {
      var 自机 = 反射对象.自机;
      var 坐标_x = 自机._x + _root.随机偏移(反射对象.特效_x波动);
      var 坐标_y = 自机._y + 反射对象.特效_y偏移 * (反射对象.特效偏移计数++ * 2 / 反射对象.特效偏移上限);
      var 子弹属性 = 反射对象.子弹属性;

      反射对象.特效偏移计数 = 反射对象.特效偏移计数 % 反射对象.特效偏移上限;
      子弹属性.shootX = 坐标_x;
      子弹属性.shootY = 坐标_y;
      子弹属性.shootZ = 坐标_y;

      _root.子弹区域shoot传递(子弹属性);
   };

   反射对象.展开函数 = _root.装备生命周期函数.炎魔斩new展开动画; //模拟友元函数降低索引开销
   反射对象.收纳函数 = _root.装备生命周期函数.炎魔斩new收纳动画;
};

_root.装备生命周期函数.炎魔斩new周期 = function(反射对象, 参数对象) 
{
   _root.装备生命周期函数.移除异常周期函数(反射对象);
   var 自机 = 反射对象.自机;
   var 刀 = 自机.刀_引用;

   if(_root.兵器使用检测(自机))
   {
      if(_root.按键输入检测(自机, _root.武器变形键))
      {
         _root.更新并执行时间间隔动作(反射对象, 反射对象.链锯化标签, 反射对象.链锯化执行函数, 反射对象.链锯化切换间隔, false, 反射对象);
      }

      if (_root.兵器攻击检测(自机)) 
      {
         if(自机.状态 === "战技")
         {
            _root.更新并执行时间间隔动作(反射对象, 反射对象.特效释放标签, 反射对象.战技特效释放函数, 反射对象.战技特效间隔, false, 反射对象);
         }
         else
         {
            if(_root.成功率(反射对象.成功率))
            {
               _root.更新并执行时间间隔动作(反射对象, 反射对象.特效释放标签, 反射对象.特效释放函数, 反射对象.特效释放间隔 * 2, false, 反射对象);
            }
         }
      }

      反射对象.展开函数(反射对象);
   }
   else
   {
      反射对象.收纳函数(反射对象);
   }

   刀.动画.gotoAndStop(反射对象.当前帧);
};

_root.装备生命周期函数.炎魔斩new展开动画 = function(反射对象)
{
   switch(反射对象.当前帧)
   {
      case 反射对象.锯齿剑结束帧:

         if(反射对象.链锯化)
         {
            --反射对象.当前帧;
         }
         break;

      case 反射对象.链锯剑结束帧:

         if(!反射对象.链锯化)
         {
            --反射对象.当前帧;
         }
         break;

      case 反射对象.锯齿剑起始帧:

         if(反射对象.链锯化)
         {
            反射对象.当前帧 = 反射对象.形态转换起始帧 + 1;
         }
         else
         {
            ++反射对象.当前帧;
         }
         break;

      case 反射对象.链锯剑起始帧:
         
         if(反射对象.链锯化)
         {
            ++反射对象.当前帧;
         }
         else
         {
            反射对象.当前帧 = 反射对象.形态转换结束帧 - 1;
         }
         break;

      case 反射对象.形态转换起始帧:

         if(反射对象.链锯化)
         {
            ++反射对象.当前帧;
         }
         else
         {
            反射对象.当前帧 = 反射对象.锯齿剑起始帧 + 1;
         }
         break;

      case 反射对象.形态转换结束帧:

         if(反射对象.链锯化)
         {
            反射对象.当前帧 = 反射对象.链锯剑起始帧 + 1;
         }
         else
         {
            --反射对象.当前帧;
         }
         break;

      default:

         if(反射对象.当前帧 < 反射对象.锯齿剑结束帧)
         {
            反射对象.当前帧 -= 反射对象.链锯化 ? 1 : -1;
         }
         else if(反射对象.当前帧 < 反射对象.形态转换结束帧)
         {
            反射对象.当前帧 += 反射对象.链锯化 ? 1 : -1;
         }
         else
         {
            反射对象.当前帧 += 反射对象.链锯化 ? 1 : -1;
         }
         break;
   }
};

_root.装备生命周期函数.炎魔斩new收纳动画 = function(反射对象)
{
   switch(反射对象.当前帧)
   {
      case 反射对象.锯齿剑起始帧:
      case 反射对象.链锯剑起始帧:
      case 反射对象.形态转换起始帧:
      case 反射对象.形态转换结束帧:

         反射对象.当前帧 = 反射对象.链锯化 ? 反射对象.链锯剑起始帧 : 反射对象.锯齿剑起始帧;
         break;

      default:

         if(反射对象.当前帧 <= 反射对象.锯齿剑结束帧)
         {
            --反射对象.当前帧;
         }
         else if(反射对象.当前帧 <= 反射对象.形态转换结束帧)
         {
            反射对象.当前帧 += 反射对象.链锯化 ? 1 : -1;
         }
         else
         {
            --反射对象.当前帧;
         }
         break;
   }
}
