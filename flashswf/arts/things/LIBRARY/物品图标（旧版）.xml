<DOMSymbolItem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://ns.adobe.com/xfl/2008/" name="物品图标（旧版）" itemID="67bc2130-00000dca" lastModified="1740382512">
  <timeline>
    <DOMTimeline name="物品图标（旧版）" currentFrame="9">
      <layers>
        <DOMLayer name="Labels Layer" color="#A947D3">
          <frames>
            <DOMFrame index="0" name="空" labelType="name" keyMode="9728">
              <elements/>
            </DOMFrame>
            <DOMFrame index="1" duration="3" keyMode="9728">
              <elements/>
            </DOMFrame>
            <DOMFrame index="4" duration="10" name="默认图标" labelType="name" keyMode="9728">
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Script Layer" color="#09BDC1">
          <frames>
            <DOMFrame index="0" keyMode="9728">
              <Actionscript>
                <script><![CDATA[function 装备槽对应物品类别(类别)
{
   if(_parent._name == "物品栏界面")
   {
      if(_root.物品栏界面[eval("each")].装备槽类别 == 类别)
      {
         temp类别 = _root.根据物品名查找属性(_root.物品栏[this.对应数组号][0],3);
         if(temp类别 == 类别)
         {
            if(_root.物品栏界面[eval("each")].是否装备 == 0)
            {
               _root.物品栏界面[eval("each")].是否装备 = 1;
               _root.物品栏[this.对应数组号][2] = 1;
            }
            else if(_root.物品栏界面[eval("each")].是否装备 == 1)
            {
               _root.物品栏[_root.物品栏界面[eval("each")].对应数组号][2] = 0;
               _root.物品栏[this.对应数组号][2] = 1;
            }
            _root[_root.物品栏界面[eval("each")].对应装备] = _root.物品栏[this.对应数组号][0];
            _root[_root.物品栏界面[eval("each")].数量] = _root.物品栏[this.对应数组号][1];
            _root.物品栏界面[eval("each")].对应数组号 = this.对应数组号;
            _root.物品栏界面[eval("each")].数量 = _root[_root.物品栏界面[eval("each")].数量];
            if(_root.物品栏[this.对应数组号][0] == "空")
            {
               _root.物品栏界面[eval("each")].gotoAndStop(_root.物品栏[this.对应数组号][0]);
            }
            else
            {
               _root.物品栏界面[eval("each")].图标 = "图标-" + _root.物品栏[this.对应数组号][0];
               _root.物品栏界面[eval("each")].gotoAndStop("默认图标");
            }
            _root.发布消息("成功装备" + 类别 + _root.物品栏[this.对应数组号][0] + "!");
            if(类别 == "长枪")
            {
               _root.长枪配置("man1",_root.物品栏[this.对应数组号][0]);
               _root.播放音效("9mmclip2.wav");
            }
            else if(类别 == "手枪")
            {
               _root.播放音效("9mmclip2.wav");
               if(对应装备 == "手枪")
               {
                  _root.手枪配置("man1",_root.物品栏[this.对应数组号][0]);
               }
               else if(对应装备 == "手枪2")
               {
                  _root.手枪2配置("man1",_root.物品栏[this.对应数组号][0]);
               }
            }
            else if(类别 == "手雷")
            {
               _root.手雷配置("man1",_root.物品栏[this.对应数组号][0]);
               _root.播放音效("9mmclip2.wav");
            }
            else if(类别 == "刀")
            {
               _root.刀配置("man1",_root.物品栏[this.对应数组号][0]);
               _root.播放音效("9mmclip2.wav");
            }
            else if(类别 == "颈部装备")
            {
               _root.gameworld[_root.控制目标].称号 = _root.根据物品名查找属性(_root.物品栏[this.对应数组号][0],14);
               _root.gameworld[_root.控制目标].称号 = _root.gameworld[_root.控制目标].称号[0];
               _root.玩家称号 = _root.gameworld[_root.控制目标].称号;
               _root.播放音效("9mmclip2.wav");
            }
            else
            {
               _root.播放音效("ammopickup1.wav");
            }
            _root.刷新人物装扮("man1");
         }
      }
   }
   else if(_parent._name == "购买物品界面")
   {
   }
}
stop();
]]></script>
              </Actionscript>
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer 3" color="#7CFB1F">
          <frames>
            <DOMFrame index="0" duration="4" keyMode="9728">
              <elements/>
            </DOMFrame>
            <DOMFrame index="4" duration="10" keyMode="9728">
              <elements>
                <DOMDynamicText name="mytext" fontRenderingMode="device" width="22" height="10.05" isSelectable="false" variableName="数量">
                  <matrix>
                    <Matrix d="1.0035400390625" tx="-11" ty="-13"/>
                  </matrix>
                  <textRuns>
                    <DOMTextRun>
                      <characters>0</characters>
                      <textAttrs>
                        <DOMTextAttrs aliasText="false" autoKern="false" rotation="true" lineSpacing="0" size="9" bitmapSize="180" face="_sans" fillColor="#FFFFFF"/>
                      </textAttrs>
                    </DOMTextRun>
                  </textRuns>
                  <filters>
                    <GlowFilter blurX="3" blurY="3" color="#000000" strength="10"/>
                  </filters>
                </DOMDynamicText>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer 4" color="#F6F39D">
          <frames>
            <DOMFrame index="0" duration="4" keyMode="9728">
              <elements/>
            </DOMFrame>
            <DOMFrame index="4" duration="10" keyMode="9728">
              <elements>
                <DOMSymbolInstance libraryItemName="无AS链接/Symbol 21" centerPoint3DX="3.8" centerPoint3DY="11.15">
                  <matrix>
                    <Matrix ty="8"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <Actionscript>
                    <script><![CDATA[onClipEvent(load){
   this._visible = 0;
   if(_parent._parent._name == "物品栏界面")
   {
      if(_root.物品栏[_parent.对应数组号][2] == 1)
      {
         this._visible = 1;
         switch(_root.物品栏[_parent.对应数组号][0])
         {
            case _root.头部装备:
            case _root.上装装备:
            case _root.手部装备:
            case _root.下装装备:
            case _root.脚部装备:
            case _root.颈部装备:
            case _root.长枪:
            case _root.手枪:
            case _root.手枪2:
            case _root.刀:
            case _root.手雷:
            case _root.快捷物品栏1:
            case _root.快捷物品栏2:
            case _root.快捷物品栏3:
               break;
            default:
               _root.物品栏[_parent.对应数组号][2] = 0;
               _parent.是否装备 = undefined;
               this._visible = 0;
         }
      }
      else
      {
         this._visible = 0;
      }
   }
   if(_parent.数量 > 1)
   {
      _parent.mytext._alpha = 100;
   }
   else
   {
      _parent.mytext._alpha = 0;
   }
}
]]></script>
                  </Actionscript>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer 5" color="#8B32F1" current="true" isSelected="true">
          <frames>
            <DOMFrame index="0" duration="4" keyMode="9728">
              <elements/>
            </DOMFrame>
            <DOMFrame index="4" duration="10" keyMode="9728">
              <elements>
                <DOMSymbolInstance libraryItemName="无AS链接/Symbol 19" name="图标壳" centerPoint3DX="12" centerPoint3DY="12">
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <Actionscript>
                    <script><![CDATA[onClipEvent(load){
   this.attachMovie(_parent.图标,"图标",this.getNextHighestDepth());
   if(this.图标._x != undefined)
   {
      this.基本款._visible = 0;
   }
   else
   {
      this.基本款._visible = 1;
   }
}
]]></script>
                  </Actionscript>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer 6" color="#AB72EB">
          <frames>
            <DOMFrame index="0" duration="14" keyMode="9728">
              <elements>
                <DOMSymbolInstance libraryItemName="无AS链接/Symbol 13" name="area">
                  <matrix>
                    <Matrix tx="-12.5" ty="-12.5"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer 7" color="#D428BA">
          <frames>
            <DOMFrame index="0" duration="4" keyMode="9728">
              <elements>
                <DOMSymbolInstance libraryItemName="无AS链接/Symbol 11" symbolType="graphic" loop="loop">
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
            <DOMFrame index="4" duration="10" keyMode="9728">
              <elements>
                <DOMSymbolInstance libraryItemName="无AS链接/Symbol 15" symbolType="button">
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <Actionscript>
                    <script><![CDATA[on(rollOver){
   if(_parent._name == "物品栏界面")
   {
      tmp_sz = _root.根据物品名查找全部属性(_root.物品栏[this.对应数组号][0]);
      _root.物品图标注释(tmp_sz);
      if(是否装备 == undefined and _root.物品栏[this.对应数组号][2] == 0)
      {
         _root.鼠标.gotoAndStop("手型准备抓取");
      }
   }
   else if(_parent._name == "购买物品界面")
   {
      tmp_sz = _root.根据物品名查找全部属性(_root.购买物品界面.物品栏[this.对应数组号][0]);
      _root.物品图标注释(tmp_sz);
   }
   else if(_parent._name == "仓库界面")
   {
      tmp_sz = _root.根据物品名查找全部属性(_root.仓库栏[this.对应数组号][0]);
      _root.物品图标注释(tmp_sz);
      _root.鼠标.gotoAndStop("手型准备抓取");
   }
}
on(rollOut){
   _root.鼠标.gotoAndStop("手型普通");
   _root.注释结束();
}
on(press){
   _root.注释结束();
   if(_parent._name == "物品栏界面")
   {
      if(是否装备 == undefined and _root.物品栏[this.对应数组号][2] == 0)
      {
         this.图标壳.图标.gotoAndStop(2);
         startDrag(this,1);
         _root.鼠标.gotoAndStop("手型抓取");
         if(_root.物品栏界面.getDepth() < _root.仓库界面.getDepth())
         {
            _root.物品栏界面.swapDepths(_root.仓库界面);
         }
         this.swapDepths(500 + random(100));
      }
   }
   else if(_parent._name == "仓库界面")
   {
      this.图标壳.图标.gotoAndStop(2);
      startDrag(this,1);
      _root.鼠标.gotoAndStop("手型抓取");
      if(_root.物品栏界面.getDepth() > _root.仓库界面.getDepth())
      {
         _root.仓库界面.swapDepths(_root.物品栏界面);
      }
      this.swapDepths(500 + random(100));
   }
}
on(release){
   this.图标壳.图标.gotoAndStop(1);
   if(_parent._name == "物品栏界面")
   {
      var flag = false;
      if(_root.仓库界面.hitTest(_root._xmouse,_root._ymouse,true) == true and _root.仓库界面._visible == 1)
      {
         for(eachs in _root.仓库界面)
         {
            if(_root.仓库界面[eachs].area.hitTest(_root._xmouse,_root._ymouse,true))
            {
               temp_h = this.对应数组号;
               temp_s = [_root.物品栏[temp_h][0],_root.物品栏[temp_h][1]];
               temp_t = [_root.仓库栏[_root.仓库界面[eachs].对应数组号][0],_root.仓库栏[_root.仓库界面[eachs].对应数组号][1],0];
               _root.仓库栏[_root.仓库界面[eachs].对应数组号] = temp_s;
               _root.物品栏[this.对应数组号] = temp_t;
               _root.排列仓库物品图标();
               flag = true;
            }
         }
      }
      if(!flag)
      {
         for(each in _root.物品栏界面)
         {
            if(_root.物品栏界面[each]._name != this._name)
            {
               if(_root.物品栏界面[each].area.hitTest(_root._xmouse,_root._ymouse,true) and _root.物品栏界面[each].图标是否可对换位置 == 1 and _root.物品栏[_root.物品栏界面[each].对应数组号][2] != 1)
               {
                  temp_h = _root.物品栏界面[each].对应数组号;
                  temp_s = _root.物品栏[temp_h];
                  _root.物品栏[temp_h] = _root.物品栏[this.对应数组号];
                  _root.物品栏[this.对应数组号] = temp_s;
               }
            }
            if(_root.物品栏界面[each].area.hitTest(_root._xmouse,_root._ymouse,true) and _root.物品栏界面[each].是否装备 != undefined)
            {
               装备槽对应物品类别("长枪");
               装备槽对应物品类别("手枪");
               装备槽对应物品类别("刀");
               装备槽对应物品类别("手雷");
               装备槽对应物品类别("头部装备");
               装备槽对应物品类别("上装装备");
               装备槽对应物品类别("手部装备");
               装备槽对应物品类别("下装装备");
               装备槽对应物品类别("脚部装备");
               装备槽对应物品类别("颈部装备");
            }
            if(_root.物品栏界面[each].area.hitTest(_root._xmouse,_root._ymouse,true) and _root.物品栏界面[each]._name == "垃圾箱")
            {
               _root.创建可拾取物(_root.物品栏[this.对应数组号][0],_root.物品栏[this.对应数组号][1],_root.gameworld[_root.控制目标]._x,_root.gameworld[_root.控制目标]._y,true);
               _root.发布消息("丢弃物品" + _root.物品栏[this.对应数组号][0]);
               _root.物品栏[this.对应数组号] = ["空",0,0];
            }
            if(_root.物品栏界面[each].area.hitTest(_root._xmouse,_root._ymouse,true) and _root.快捷药剂界面.hitTest(_root._xmouse,_root._ymouse,true))
            {
               if(_root.根据物品名查找属性(_root.物品栏[this.对应数组号][0],3) == "药剂")
               {
                  if(_root.快捷药剂界面.快捷物品栏1.hitTest(_root._xmouse,_root._ymouse,true))
                  {
                     _root.快捷药剂界面.快捷物品栏1.对应数组号 = this.对应数组号;
                     _root.快捷药剂界面.快捷物品栏1.已装备名 = _root.物品栏[this.对应数组号][0];
                     _root.快捷药剂界面.快捷物品栏1.是否装备 = 1;
                     _root.快捷物品栏1 = _root.物品栏[this.对应数组号][0];
                     _root.快捷药剂界面.快捷物品栏1.图标 = "图标-" + _root.快捷物品栏1;
                     _root.快捷药剂界面.快捷物品栏1.gotoAndStop("默认图标");
                     _root.快捷药剂界面.快捷物品栏1.数量 = _root.物品栏[this.对应数组号][1];
                     _root.物品栏[this.对应数组号][2] = 1;
                  }
                  else if(_root.快捷药剂界面.快捷物品栏2.hitTest(_root._xmouse,_root._ymouse,true))
                  {
                     _root.快捷药剂界面.快捷物品栏2.对应数组号 = this.对应数组号;
                     _root.快捷药剂界面.快捷物品栏2.已装备名 = _root.物品栏[this.对应数组号][0];
                     _root.快捷药剂界面.快捷物品栏2.是否装备 = 1;
                     _root.快捷物品栏2 = _root.物品栏[this.对应数组号][0];
                     _root.快捷药剂界面.快捷物品栏2.图标 = "图标-" + _root.快捷物品栏2;
                     _root.快捷药剂界面.快捷物品栏2.gotoAndStop("默认图标");
                     _root.快捷药剂界面.快捷物品栏2.数量 = _root.物品栏[this.对应数组号][1];
                     _root.物品栏[this.对应数组号][2] = 1;
                  }
                  else if(_root.快捷药剂界面.快捷物品栏3.hitTest(_root._xmouse,_root._ymouse,true))
                  {
                     _root.快捷药剂界面.快捷物品栏3.对应数组号 = this.对应数组号;
                     _root.快捷药剂界面.快捷物品栏3.已装备名 = _root.物品栏[this.对应数组号][0];
                     _root.快捷药剂界面.快捷物品栏3.是否装备 = 1;
                     _root.快捷物品栏3 = _root.物品栏[this.对应数组号][0];
                     _root.快捷药剂界面.快捷物品栏3.图标 = "图标-" + _root.快捷物品栏3;
                     _root.快捷药剂界面.快捷物品栏3.gotoAndStop("默认图标");
                     _root.快捷药剂界面.快捷物品栏3.数量 = _root.物品栏[this.对应数组号][1];
                     _root.物品栏[this.对应数组号][2] = 1;
                  }
               }
            }
         }
         if(_root.购买物品界面.hitTest(_root._xmouse,_root._ymouse,true) == true and _root.物品栏界面.hitTest(_root._xmouse,_root._ymouse,true) != false and _root.购买物品界面._visible == 1 and _root.物品栏界面.窗体area.hitTest(_root._xmouse,_root._ymouse,true) == false)
         {
            if(isNaN(tmp_sz[5]) == false)
            {
               _root.金钱 += Math.floor(Number(tmp_sz[5] * 0.25));
            }
            _root.物品栏[this.对应数组号] = ["空",0,0];
            _root.播放音效("收银机.mp3");
         }
      }
      stopDrag();
      _root.排列物品图标();
      this.removeMovieClip();
   }
   else if(_parent._name == "购买物品界面")
   {
      物品名 = _root.购买物品界面.物品栏[this.对应数组号][0];
      _root.购买物品界面.准备购买的物品 = 物品名;
      _root.购买物品界面.准备购买的物品单价 = _root.根据物品名查找属性(物品名,5);
      if(_root.根据物品名查找属性(物品名,2) == "消耗品")
      {
         _root.购买物品界面.gotoAndStop("购买数量");
      }
      else
      {
         _root.购买物品界面.gotoAndStop("结算");
      }
   }
   else if(_parent._name == "快捷药剂界面" and _root.全鼠标控制 == true)
   {
      _parent[this.控制器].gotoAndStop("已扣扳机");
   }
   else if(_parent._name == "仓库界面")
   {
      for(each in _root.仓库界面)
      {
         if(_root.仓库界面[each].area.hitTest(_root._xmouse,_root._ymouse,true) and _root.仓库界面[each]._name == "垃圾箱")
         {
            _root.创建可拾取物(_root.仓库栏[this.对应数组号][0],_root.仓库栏[this.对应数组号][1],_root.gameworld[_root.控制目标]._x,_root.gameworld[_root.控制目标]._y,true);
            _root.发布消息("丢弃物品" + _root.仓库栏[this.对应数组号][0]);
            _root.仓库栏[this.对应数组号] = ["空",0];
         }
         if(_root.仓库界面[each]._name != this._name)
         {
            if(_root.仓库界面[each].area.hitTest(_root._xmouse,_root._ymouse,true) and _root.仓库界面[each].图标是否可对换位置 == 1 and _root.仓库栏[_root.仓库界面[each].对应数组号][2] != 1)
            {
               temp_h = _root.仓库界面[each].对应数组号;
               temp_s = _root.仓库栏[temp_h];
               _root.仓库栏[temp_h] = _root.仓库栏[this.对应数组号];
               _root.仓库栏[this.对应数组号] = temp_s;
            }
         }
      }
      for(eachs in _root.物品栏界面)
      {
         if(_root.物品栏界面[eachs].area.hitTest(_root._xmouse,_root._ymouse,true))
         {
            if(_root.物品栏[_root.物品栏界面[eachs].对应数组号][2] == 0)
            {
               temp_h = this.对应数组号;
               temp_s = [_root.仓库栏[temp_h][0],_root.仓库栏[temp_h][1],0];
               temp_t = [_root.物品栏[_root.物品栏界面[eachs].对应数组号][0],_root.物品栏[_root.物品栏界面[eachs].对应数组号][1]];
               _root.物品栏[_root.物品栏界面[eachs].对应数组号] = temp_s;
               _root.仓库栏[this.对应数组号] = temp_t;
               _root.排列物品图标();
            }
         }
      }
      stopDrag();
      _root.排列仓库物品图标();
      this.removeMovieClip();
   }
}
]]></script>
                  </Actionscript>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
      </layers>
    </DOMTimeline>
  </timeline>
</DOMSymbolItem>